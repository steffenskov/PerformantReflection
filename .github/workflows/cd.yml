name: "Continuous Deployment"

on:
  push:
    branches: [main]

env:
  PROJECT_PATH: "src/PerformantReflection/PerformantReflection.csproj"
  SOLUTION_PATH: "PerformantReflection.sln"
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: "https://api.nuget.org/v3/index.json"

jobs:
  test:
    name: "test"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install dotnet"
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: "Restore packages"
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Test
        run: dotnet test ${{ env.SOLUTION_PATH }}

  deploy:
    needs: test
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install dotnet"
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: "Restore packages"
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: "Build project"
        run: dotnet build ${{ env.SOLUTION_PATH }} --no-restore --configuration Release

      - name: "Get version"
        id: version
        uses: bbonkr/get-version-action@v1.2.0
        with:
          project: ${{ env.PROJECT_PATH }}

      - name: "Pack"
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols -p:SymbolPackageFormat=snupkg -p:PackageVersion=${{ steps.version.outputs.version }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: "Push package"
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s ${{ env.NUGET_SOURCE_URL }} --skip-duplicate
